{
    "configurations": [
        {
            "name": "!!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags"
        },
        {
            "name": "Mac",
            "macFrameworkPath": [],
            "includePath": [
                "/Users/greg/Dropbox/PlatformIO/Projects/inchworm_embedded/include",
                "/Users/greg/Dropbox/PlatformIO/Projects/inchworm_embedded/src",
                "/Users/greg/.platformio/packages/framework-arduino-avr/libraries/Wire/src",
                "/Users/greg/.platformio/lib/Servo_ID883/src",
                "/Users/greg/.platformio/packages/framework-arduino-avr/cores/arduino",
                "/Users/greg/.platformio/packages/framework-arduino-avr/variants/standard",
                "/Users/greg/Dropbox/PlatformIO/Projects/inchworm_embedded/lib/Button",
                "/Users/greg/Dropbox/PlatformIO/Projects/inchworm_embedded/lib/ams_as5048b",
                "/Users/greg/Dropbox/PlatformIO/Projects/inchworm_embedded/lib/system_calibration",
                "/Users/greg/.platformio/lib/MQTT_ID617/src",
                "/Users/greg/.platformio/lib/PubSubClient/src",
                "/Users/greg/.platformio/lib/RFM69_ID92",
                "/Users/greg/.platformio/lib/SPIFlash_ID125",
                "/Users/greg/.platformio/lib/WiFi101_ID299/src",
                "/Users/greg/.platformio/lib/linalg",
                "/Users/greg/.platformio/lib/template",
                "/Users/greg/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src",
                "/Users/greg/.platformio/packages/framework-arduino-avr/libraries/HID/src",
                "/Users/greg/.platformio/packages/framework-arduino-avr/libraries/SPI/src",
                "/Users/greg/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src",
                "/Users/greg/.platformio/packages/tool-unity",
                ""
            ],
            "browse": {
                "limitSymbolsToIncludedHeaders": true,
                "path": [
                    "/Users/greg/Dropbox/PlatformIO/Projects/inchworm_embedded/include",
                    "/Users/greg/Dropbox/PlatformIO/Projects/inchworm_embedded/src",
                    "/Users/greg/.platformio/packages/framework-arduino-avr/libraries/Wire/src",
                    "/Users/greg/.platformio/lib/Servo_ID883/src",
                    "/Users/greg/.platformio/packages/framework-arduino-avr/cores/arduino",
                    "/Users/greg/.platformio/packages/framework-arduino-avr/variants/standard",
                    "/Users/greg/Dropbox/PlatformIO/Projects/inchworm_embedded/lib/Button",
                    "/Users/greg/Dropbox/PlatformIO/Projects/inchworm_embedded/lib/ams_as5048b",
                    "/Users/greg/Dropbox/PlatformIO/Projects/inchworm_embedded/lib/system_calibration",
                    "/Users/greg/.platformio/lib/MQTT_ID617/src",
                    "/Users/greg/.platformio/lib/PubSubClient/src",
                    "/Users/greg/.platformio/lib/RFM69_ID92",
                    "/Users/greg/.platformio/lib/SPIFlash_ID125",
                    "/Users/greg/.platformio/lib/WiFi101_ID299/src",
                    "/Users/greg/.platformio/lib/linalg",
                    "/Users/greg/.platformio/lib/template",
                    "/Users/greg/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src",
                    "/Users/greg/.platformio/packages/framework-arduino-avr/libraries/HID/src",
                    "/Users/greg/.platformio/packages/framework-arduino-avr/libraries/SPI/src",
                    "/Users/greg/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src",
                    "/Users/greg/.platformio/packages/tool-unity",
                    ""
                ]
            },
            "defines": [
                "PLATFORMIO=40201",
                "ARDUINO_AVR_UNO",
                "F_CPU=16000000L",
                "ARDUINO_ARCH_AVR",
                "ARDUINO=10808",
                "__AVR_ATmega328P__",
                ""
            ],
            "intelliSenseMode": "clang-x64",
            "cStandard": "c11",
            "cppStandard": "c++11",
            "compilerPath": "/Users/greg/.platformio/packages/toolchain-atmelavr/bin/avr-gcc",
            "compilerArgs": [
                "-mmcu=atmega328p",
                ""
            ]
        }
    ],
    "version": 4
}
